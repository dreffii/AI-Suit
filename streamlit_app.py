import streamlit as st
import requests

# 🧩 Whisk API endpoint (replace if different)
WHISK_API_URL = "https://api.whisk.ai/v1/images/generate"

# --- Function to handle user login ---
def whisk_login():
    st.subheader("🔑 Sign in to Whisk AI")
    api_key = st.text_input("Enter your Whisk AI API key", type="password")
    if st.button("Sign In"):
        if api_key.strip():
            st.session_state["whisk_api_key"] = api_key.strip()
            st.success("✅ Signed in successfully!")
        else:
            st.warning("Please enter a valid API key.")

# --- Function to send prompt + image to Whisk ---
def send_to_whisk(prompt_text, uploaded_file=None):
    if "whisk_api_key" not in st.session_state:
        return "⚠️ Please sign in first."

    headers = {"Authorization": f"Bearer {st.session_state['whisk_api_key']}"}
    data = {"prompt": prompt_text}
    files = {"file": uploaded_file.getvalue()} if uploaded_file else None

    try:
        response = requests.post(WHISK_API_URL, headers=headers, files=files, data=data)
        if response.status_code == 200:
            result = response.json()
            return result.get("image_url", "No image URL found in response.")
        else:
            return f"❌ Error {response.status_code}: {response.text}"
    except Exception as e:
        return f"❌ Failed: {str(e)}"

# --- Streamlit UI ---
st.set_page_config(page_title="🧪 Whisk AI Test App", layout="centered")
st.title("🧪 Whisk AI Test App")
st.caption("Sign in with your Whisk AI account, upload an image, and test image generation.")

# --- Sidebar Login ---
with st.sidebar:
    if "whisk_api_key" not in st.session_state:
        whisk_login()
    else:
        st.success("✅ Logged in to Whisk AI")
        if st.button("Logout"):
            del st.session_state["whisk_api_key"]

# --- Main Interface ---
if "whisk_api_key" not in st.session_state:
    st.info("Please sign in with your Whisk AI API key to continue.")
    st.stop()

uploaded_file = st.file_uploader("📤 Upload an image (optional)", type=["jpg", "jpeg", "png"])
prompt_text = st.text_area("🧠 Prompt", placeholder="Describe your concept or scene...")

if st.button("🚀 Generate with Whisk AI"):
    if not prompt_text.strip():
        st.warning("Please enter a prompt first.")
    else:
        with st.spinner("Generating image..."):
            result = send_to_whisk(prompt_text, uploaded_file)
        if result.startswith("http"):
            st.image(result, caption="Generated by Whisk AI", use_column_width=True)
        else:
            st.error(result)
